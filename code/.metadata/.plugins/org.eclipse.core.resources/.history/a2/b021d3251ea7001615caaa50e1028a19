package cn.shlh.compress.simpleModel;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;
/**
 * java 实现文件压缩功能 简单示例
 * @author Administrator
 *
 */
public class ZipCompress {

	public static void main(String[] args) {
		String sourcePath = "F:\\王超翔";
		String outPath = "F:\\test/王超翔.zip";
		
		try {
			File file = new File(sourcePath);
			//文件输出流
			FileOutputStream fos = new FileOutputStream(new File(outPath));
			//zip格式的输出流
			ZipOutputStream zos = new ZipOutputStream(fos);
			//压缩条目
			String zipEntryName = file.getName();
			
			//压缩文件
			//zipFile(file, zos, zipEntryName);
			//压缩文件夹
			zipDirectory(file, zos, zipEntryName);
			zos.close();
			fos.close();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}

	}

	/**
	 * 压缩文件夹
	 * @param file 将要被压缩的文件夹
	 * @param zos zip格式输出流
	 * @param zipEntryName 压缩条目
	 * @throws IOException
	 * @throws FileNotFoundException
	 */
	private static void zipDirectory(File file, ZipOutputStream zos,
			String zipEntryName) throws IOException, FileNotFoundException {
		for(File innerFile:file.listFiles()){
			if(innerFile.isFile()){
				//如果是文件则直接调用压缩文件的方法进行压缩
				zipFile(innerFile,zos,zipEntryName+"/"+innerFile.getName());
			}else{
				//说明现在的file是目录，则需要将该目录的所有文件压缩
				//递归调用压缩文件夹的方法，压缩文件夹内所有内容
				zipDirectory(innerFile, zos, zipEntryName + "/" +innerFile.getName());
			}
		}
	}

	/**
	 * 压缩文件
	 * @param file 将要被压缩的文件
	 * @param zos  zip格式输出流
	 * @param zipEntryName 压缩条目
	 * @throws IOException
	 * @throws FileNotFoundException
	 */
	private static void zipFile(File file, ZipOutputStream zos,
			String zipEntryName) throws IOException, FileNotFoundException {
		//设置压缩条目，将一个将要压缩的文件写入到压缩条目中
		zos.putNextEntry(new ZipEntry(zipEntryName));
		zos.setLevel(9);
		zos.setComment("forTest");
		//读入将要压缩的文件
		FileInputStream fis = new FileInputStream(file);
		//设置缓存
		byte[] b = new byte[1024];
		int length;
		//将原文件写入zip格式输出流
		while((length = fis.read(b)) > 0){
			zos.write(b,0,length);
		}
		fis.close();
		//关闭条目
		zos.closeEntry();
	}

}
